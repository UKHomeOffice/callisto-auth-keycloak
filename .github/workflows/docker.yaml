name: Docker
on:
  push:
    branches:
      - main
      - '**EAHW-**'

jobs:
  build-docker-image:
    defaults:
      run:
        working-directory: ./config
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: eu-west-2
      KEYCLOAK_CLIENT_ID: admin-cli
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      TF_VAR_callisto_realm: callisto
      TF_VAR_callisto_url: https://web.callisto.localhost
      TF_VAR_include_test_users: true
      ECR_REGISTRY: 340268328991.dkr.ecr.eu-west-2.amazonaws.com 
      DOCKER_REPO: callisto/auth-keycloak

    services:
      keycloak-amd:
        image: tmohdit/keycloak:15.1.1
        options: >-
          --name keycloak-amd
          --health-cmd "curl -f http://localhost:${{ job.services.keycloak-amd.ports[8080] }}/auth"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 6
        env:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
        ports:
        - 8080
      localstack:
        image: localstack/localstack
        options: --name localstack
        ports:
        - 4566
        env:
          SERVICES: s3

    steps:
    - uses: actions/checkout@v1

    - name: Create S3 local bucket
      run: |
        aws s3api create-bucket --bucket terraform --endpoint-url http://localhost:${{ job.services.localstack.ports[4566] }} --create-bucket-configuration LocationConstraint=eu-west-2

    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init AMD
      id: init-amd
      run: terraform init -reconfigure -backend-config="endpoint=http://localhost:${{ job.services.localstack.ports[4566] }}" -backend-config="region=eu-west-2" -backend-config="skip_credentials_validation=true" -backend-config="skip_metadata_api_check=true" -backend-config="bucket=terraform" -backend-config="key=terraform-amd.tfstate" -backend-config="force_path_style=true"

    - name: Terraform Plan AMD
      id: plan-amd
      env:
        KEYCLOAK_URL: http://localhost:${{ job.services.keycloak-amd.ports[8080] }}
      run: terraform plan -input=false -out=tfplan

    - name: Terraform Apply AMD
      id: apply-amd
      env:
        KEYCLOAK_URL: http://localhost:${{ job.services.keycloak-amd.ports[8080] }}
      run: terraform apply -input=false -auto-approve -input=false tfplan

    - name: Docker commit
      run: |
        docker stop keycloak-amd
        docker commit keycloak-amd ${{ env.DOCKER_REPO }}:${{ github.sha }}-amd
        # docker build --build-arg "image=${{ env.DOCKER_REPO }}:${{ github.sha }}-amd" -t ${{ env.DOCKER_REPO }}:${{ github.sha }}-amd .
      shell: bash

    - name: Build ARM image
      uses: docker/build-push-action@v3
      with:
          registry: ''
          platforms: linux/arm64
          context: .
          push: false
          tags: ${{ env.DOCKER_REPO }}:${{ github.sha }}-arm
          build-args: |
            image=${{ env.DOCKER_REPO }}:${{ github.sha }}-amd

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CALLISTO_AUTH_KEYCLOAK_DEPLOY_BOT_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CALLISTO_AUTH_KEYCLOAK_DEPLOY_BOT_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push multi-arch images and manifest to ECR Registry
      run: |
        if [ "$GITHUB_REF_NAME" = "main" ]
        then
          TAG=latest
        elif [[ $GITHUB_REF_NAME =~ (EAHW-[0-9]*) ]]
        then
          TAG=${match/#E/E}${BASH_REMATCH/#E/E}
        else
          TAG=${GITHUB_SHA}
        fi
        docker tag ${DOCKER_REPO}:${GITHUB_SHA}-amd ${ECR_REGISTRY}/${DOCKER_REPO}:${GITHUB_SHA}-amd
        docker tag ${DOCKER_REPO}:${GITHUB_SHA}-arm ${ECR_REGISTRY}/${DOCKER_REPO}:${GITHUB_SHA}-arm
        docker image push --all-tags ${ECR_REGISTRY}/${DOCKER_REPO}
        docker manifest create ${ECR_REGISTRY}/${DOCKER_REPO}:${TAG} --amend ${ECR_REGISTRY}/${DOCKER_REPO}:${GITHUB_SHA}-amd --amend ${ECR_REGISTRY}/${DOCKER_REPO}:${GITHUB_SHA}-arm
        docker manifest push ${ECR_REGISTRY}/${DOCKER_REPO}:${TAG}
